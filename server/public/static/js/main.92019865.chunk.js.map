{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","backendData","setBackendData","useEffect","fetch","then","response","json","data","react_default","a","createElement","className","style","border","measurements","Fragment","map","item","index","key","textAlign","title","unit","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"mMAgDeA,MA7Cf,WAAe,IAAAC,EAEyBC,mBAAS,CAAC,KAAIC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA7CK,EAAWH,EAAA,GAAEI,EAAcJ,EAAA,GAYlC,OAVAK,oBAAU,WACRC,MAAM,QAAQC,KACZ,SAAAC,GAAQ,OAAIA,EAASC,SACrBF,KACA,SAAAG,GACEN,EAAeM,MAGlB,IAGDC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,UAAI,oBACFF,EAAAC,EAAAC,cAAA,SAAOE,MAAO,CAACC,OAAQ,2BACrBL,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAACC,OAAQ,2BAClBL,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAACC,OAAQ,2BAA2B,QAC/CL,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAACC,OAAQ,2BAA2B,SAC/CL,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAACC,OAAQ,2BAA2B,SAEX,qBAA7Bb,EAAYc,aACnBN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAM,SAAA,KACEP,EAAAC,EAAAC,cAAA,UAAI,iBACJF,EAAAC,EAAAC,cAAA,UAAI,iBACJF,EAAAC,EAAAC,cAAA,UAAI,kBAGRV,EAAYc,aAAaE,IAAI,SAACC,EAAMC,GAAK,OACvCV,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAACC,OAAQ,0BAA2BM,IAAKD,GAClDV,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAACC,OAAQ,yBAA0BO,UAAW,UAAWH,EAAKI,OACzEb,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAACC,OAAQ,yBAA0BO,UAAW,QAASH,EAAKV,MACvEC,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAACC,OAAQ,2BAA4BI,EAAKK,UAI3Dd,EAAAC,EAAAC,cAAA,SAAG,oCC9BEa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAvB,KAAAsB,EAAAE,KAAA,UAAqBxB,KAAK,SAAAyB,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH/B,EAAAC,EAAAC,cAACF,EAAAC,EAAM+B,WAAU,KACfhC,EAAAC,EAAAC,cAAC+B,EAAG,QAORlB","file":"static/js/main.92019865.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './App.css';\n\nfunction App() {\n\n  const [backendData, setBackendData] = useState([{}])\n\n  useEffect(() => {\n    fetch(\"/api\").then(\n      response => response.json()\n    ).then(\n      data => {\n        setBackendData(data)\n      }\n    )\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>TUF-2000M sensor</h1>\n          <tbody style={{border: \"3px solid rgb(0, 0, 0)\"}}>\n            <tr style={{border: \"3px solid rgb(0, 0, 0)\"}}>\n              <th style={{border: \"3px solid rgb(0, 0, 0)\"}}>Name</th>\n              <th style={{border: \"3px solid rgb(0, 0, 0)\"}}>Value</th>\n              <th style={{border: \"3px solid rgb(0, 0, 0)\"}}>Unit</th>\n            </tr>\n            {(typeof backendData.measurements === 'undefined') ? (\n              <>\n                <td>Loading…</td>\n                <td>Loading…</td>\n                <td>Loading…</td>\n              </>\n            ) : (\n            backendData.measurements.map((item, index) => (\n              <tr style={{border: \"3px solid rgb(0, 0, 0)\"}} key={index}>\n                <td style={{border: \"3px solid rgb(0, 0, 0)\", textAlign: \"start\"}}>{item.title}</td>\n                <td style={{border: \"3px solid rgb(0, 0, 0)\", textAlign: \"end\"}}>{item.data}</td>\n                <td style={{border: \"3px solid rgb(0, 0, 0)\"}}>{item.unit}</td>\n              </tr>\n            )))}\n          </tbody>\n          <p>Made by Jesper Sundqvist 2023</p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}